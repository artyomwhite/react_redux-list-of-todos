{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialState","All","filterReducer","value","initialTodos","todosReducer","todos","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","title","toLocaleLowerCase","includes","isSelected","id","visibleTodos","useMemo","Active","completed","Completed","length","className","map","onClick","currentTodoFeat","classNames","TodoFilter","setFilter","filterAction","onSubmit","event","preventDefault","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","email","name","user","setUser","isLoading","setIsLoading","useEffect","getCurentUser","a","userId","Error","href","App","loading","setLoading","getAllTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6de8bae0.chunk.js","sourcesContent":["export enum Status {\n\n  All = 'all',\n\n  Active = 'active',\n\n  Completed = 'completed',\n\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n    case 'currentTodo/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype Action = { type: 'FILTER', payload: { query: string, status: Status } };\n\nconst filter = (query: string, status: Status): Action => ({\n  type: 'FILTER',\n  payload: { query, status },\n});\n\nexport const actions = {\n  filter,\n};\n\nconst initialState = { query: '', status: Status.All };\n\nconst filterReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case 'FILTER':\n      return {\n        query: action.payload.query,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/GET',\n  payload: Todo[],\n};\n\nconst setTodos = (value: Todo[]): SetTodosAction => (\n  { type: 'todos/GET', payload: value });\n\nexport const actions = { setTodos };\n\nconst initialTodos: Todo[] = [];\n\nconst todosReducer = (todos = initialTodos, action: SetTodosAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/GET':\n      return action.payload;\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoFeat } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const filter = useAppSelector(state => state.filter);\n  const todos = useAppSelector(state => state.todos.filter(\n    (todo: Todo) => {\n      return todo.title.toLocaleLowerCase().includes(filter.query.toLocaleLowerCase());\n    },\n  ));\n\n  const isSelected = (id: number) => currentTodo?.id === id;\n\n  const visibleTodos = useMemo(() => {\n    switch (filter.status) {\n      case Status.All:\n        return todos.filter((todo: Todo) => todo);\n      case Status.Active:\n        return todos.filter((todo: Todo) => !todo.completed);\n      case Status.Completed:\n        return todos.filter((todo: Todo) => todo.completed);\n      default:\n        return todos;\n    }\n  }, [filter.status, todos]);\n\n  return (\n    <>\n      {filter.query && !visibleTodos.length && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n      <table className=\"table is-narrow is-fullwidth\">\n        { !!visibleTodos.length && (\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n        )}\n\n        <tbody>\n          {visibleTodos.map((todo: Todo) => {\n            const { title, completed, id } = todo;\n\n            return (\n              <tr key={id} data-cy=\"todo\">\n                <td className=\"is-vcentered\">{id}</td>\n                <td className=\"is-vcentered\">\n                  {completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={completed ? 'has-text-success' : 'has-text-danger'}>\n                    {title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => dispatch(currentTodoFeat.setTodo(todo))}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={classNames('far', { 'fa-eye-slash': isSelected(id), 'fa-eye': !isSelected(id) })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { actions as filterAction } from '../../features/filter';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const filter = useAppSelector(state => state.filter);\n\n  const setFilter = (status: Status, query: string) => {\n    dispatch(filterAction.filter(query, status));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setFilter(e.target.value as Status, filter.query)}\n          >\n            <option value={Status.All}>All</option>\n            <option value={Status.Active}>Active</option>\n            <option value={Status.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={(e) => setFilter(filter.status, e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {filter.query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"delete\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setFilter(filter.status, '')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoFeat } from '../../features/currentTodo';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [user, setUser] = useState<Pick<User, 'email' | 'name'>>(\n    { email: '', name: '' },\n  );\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const { email, name } = user;\n\n  useEffect(() => {\n    const getCurentUser = async () => {\n      if (!currentTodo) {\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        const res = await getUser(currentTodo.userId);\n\n        setUser(res);\n      } catch (error) {\n        throw new Error('Error');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getCurentUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? <Loader />\n        : currentTodo && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {currentTodo.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => dispatch(currentTodoFeat.removeTodo())}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{currentTodo.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {!currentTodo.completed\n                  ? <strong className=\"has-text-danger\">Planned</strong>\n                  : <strong className=\"has-text-success\">Done</strong>}\n                {' by '}\n                <a href={`mailto:${email}`}>{`${name}`}</a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    const getAllTodos = async () => {\n      try {\n        setLoading(true);\n        const res = await getTodos();\n\n        dispatch(actions.setTodos(res));\n      } catch (error) {\n        throw new Error('Error');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getAllTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            { loading ? <Loader /> : (\n              <>\n                <h1 className=\"title\">Todos:</h1>\n\n                <div className=\"block\">\n                  <TodoFilter />\n                </div>\n\n                <div className=\"block\">\n                  <TodoList />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      { currentTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}